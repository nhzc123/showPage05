

<html>
<head>
    <meta charset="utf-8">
    <title>New QoE</title>
    
<link rel="stylesheet" href="https://ssl.mail.163.com/mimg.127.net/xm/all/qa/css/iframe.css">
    <link rel="stylesheet" href="../../reset.css" type="text/css">
    <link rel="stylesheet" href="../../styl.css" type="text/css">
        
  
  <script type="text/javascript" src="../../jquery.min.js"></script>

<script src="../../echartjs/esl.js"></script>




</head>

<body >
        
        
        <!-- *********  Content  ********** -->

<div style="width:960px;margin:auto;">



      <div id="main" style="height:500px;mid-width:310px">
        </div>


      <div id="type" style="height:500px;mid-width:310px">
        </div>
    

      <div id="areas" style="height:500px;mid-width:310px">
        </div>

        <div id ="text"></div> 



</div>


    </body>



<script>

  $(document).ready(function(){
   
   seriesOptions = window.opener.seriesOptions,



    $('#main').highcharts('StockChart', {
        chart: {
        },

        
        rangeSelector: {
        inputEnabled: $('#main').width() > 480,
            selected: 1
        },

        title: {
            text: 'user Engagement'
        },

        
        series: seriesOptions
    });


          data = window.opener.typeData;
    //  alert(data.videoType);

        videoType =[];
        for( i = 0;i<data.videoType.length;i++)
              videoType[i]=data.videoType[i];

        num = [];
        tem =[];
        count=0;
        for( i=0;i<data.num020.length;i++)
              tem[i] = data.num020[i];
              num[count++]=tem;
              tem =[];
        for( i=0;i<data.num2040.length;i++)
              tem[i] = data.num2040[i];
              num[count++]=tem;
              tem =[];
        for( i=0;i<data.num4060.length;i++)
              tem[i] = data.num4060[i];
              num[count++]=tem;
              tem =[];
        for( i=0;i<data.num6080.length;i++)
              tem[i] = data.num6080[i];
              num[count++]=tem;
              tem =[];
        for( i=0;i<data.num80100.length;i++)
              tem[i] = data.num80100[i];
              num[count++]=tem;
              tem =[];
        require.config({
            paths:{ 
                'echarts' : '../../echartjs/echarts',
                'echarts/chart/bar' : '../../echartjs/echarts-map'
            }
        });
        
        // 使用
        require(
            [
                'echarts',
                'echarts/chart/bar' // 使用柱状图就加载bar模块，按需加载
            ],
            function(ec) {
                // 基于准备好的dom，初始化echarts图表
                var myChart = ec.init(document.getElementById('type')); 
       option = {
tooltip : {
        trigger: 'axis',
        axisPointer : {            // 坐标轴指示器，坐标轴触发有效
            type : 'shadow'        // 默认为直线，可选为：'line' | 'shadow'
        }
    },
    legend: {
        data:['0~20%', '20~40%','40~60%','60~80%','80~100%']
    },
    toolbox: {
        show : true,
        feature : {
            mark : {show: true},
            dataView : {show: true, readOnly: false},
            magicType : {show: true, type: ['line', 'bar', 'stack', 'tiled']},
            restore : {show: true},
            saveAsImage : {show: true}
        }
    },
    calculable : true,
    xAxis : [
        {
            type : 'value',
            max:100
        }
    ],
    yAxis : [
        {
            type : 'category',
           // data:[window.opener.typeData.videoType]
            //  data:["children", "documentary", "fun", "movie", "news", "others", "series", "sports"]
              data:videoType
        }
    ],
    series : [
        {
            name:'0~20%',
            type:'bar',
            stack: '总量',
            itemStyle : { normal: {label : {show: true, position: 'inside'}}},
           // data:[320, 302, 301, 334, 390, 330, 320,100]
              data:num[0]
        },
        {
            name:'20~40%',
            type:'bar',
            stack: '总量',
            itemStyle : { normal: {label : {show: true, position: 'inside'}}},
           // data:[120, 132, 101, 134, 90, 230, 210,100]
              data:num[1]
        },
        {
            name:'40~60%',
            type:'bar',
            stack: '总量',
            itemStyle : { normal: {label : {show: true, position: 'inside'}}},
           // data:[220, 182, 191, 234, 290, 330, 310,100]
              data:num[2]
        },
        {
            name:'60~80%',
            type:'bar',
            stack: '总量',
            itemStyle : { normal: {label : {show: true, position: 'inside'}}},
           // data:[150, 212, 201, 154, 190, 330, 410,100]
              data:num[3]
        },
        {
            name:'80~100%',
            type:'bar',
            stack: '总量',
            itemStyle : { normal: {label : {show: true, position: 'inside'}}},
           // data:[820, 832, 901, 934, 1290, 1330, 1320,100]
              data:num[4]
        }
    ]
};

                     
                // 为echarts对象加载数据 
                myChart.setOption(option); 
            }
        );



      areasData = window.opener.areasData;
            smax=parseInt(areasData.smax);
            smin=parseInt(areasData.smin);
      
      uLocation = [];

      for(i = 0;i<areasData.uLocation.length;i++)
            uLocation[i] = areasData.uLocation[i];


    require.config({
        paths:{ 
            echarts:'../../echartjs/echarts',
            'echarts/chart/bar' : '../../echartjs/echarts-map',
            'echarts/chart/line': '../../echartjs/echarts-map',
            'echarts/chart/map' : '../../echartjs/echarts-map',
            'echarts/config':     '../../echartjs/config'
        }
    });
    
    // Step:4 require echarts and use it in the callback.
    // Step:4 动态加载echarts然后在回调函数中开始使用，注意保持按需加载结构定义图表路径
    require(
        [
            'echarts',
            'echarts/chart/bar',
            'echarts/chart/line',
            'echarts/chart/map'
        ],
        function(ec) {
            
            // --- 地图 ---

            var myChart3 = ec.init(document.getElementById('areas'));


            myChart3.setOption({
          title : {
        text: 'userAreas',
        subtext: 'source:BesTV',
        x:'center'
    },

    dataRange: {
        min: smin-1,
        max: smax+1,
        text:['max','min'],           // 文本，默认为数值文本
        calculable : true,
        textStyle: {
            color: 'orange'
        }
    },


                tooltip : {
                    trigger: 'item',
                    formatter: '{b}'
                },
                series : [
                    {
                        name: '中国',
                        type: 'map',
                        mapType: 'china',
                        selectedMode : 'single',
                        itemStyle:{
                            normal:{label:{show:true}},
                            emphasis:{label:{show:true}}
                        },
                        data:uLocation
                    }
                ]
            });





            });



        });









</script>



    
<script src="../../hsjs/highstock.js"></script>
<script src="../../hsjs/modules/exporting.js"></script>
<script src="../../hcjs/highcharts.js"></script>
<script src="../../hcjs/modules/exporting.js"></script>



</html>

